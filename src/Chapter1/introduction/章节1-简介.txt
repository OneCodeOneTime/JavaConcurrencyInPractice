▲对每条被执行的指令，都有相应的“下一条”指令，程序中的控制流是按照指令集的规则来确定的。当前，几乎所有的主流编程语言都遵循着这种串行编程模型，并且在这些
语言的规范中也都清晰地定义了在某个动作完成之后需要执行的“下一个动作”。

▲但凡做事高效的人，总能在串行性和异步性之间找到合理的平衡，程序也是如此。

▲线程共享进程范围内的资源，比如内存句柄和文件句柄，但每个线程都有各自的程序计数器、栈以及局部变量等。

▲垃圾收集器通常在一个或多个专门的线程中运行。

▲由于多个线程要共享相同的内存地址空间，并且是并发执行，因此它们可能会访问或修改其他线程正在使用的变量。

▲当JVM启动时，它将为JVM的内部任务（例如，垃圾收集，终结操作等）创建后台线程，并创建一个主线程来运行main方法。
